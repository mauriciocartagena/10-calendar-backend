{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hook/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRouter.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventUpdated","eventDeleted","eventLoaded","eventClearActiveEvent","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","last","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","ariaHideApp","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96cc6044.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API_URL;\n\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseURL }/${ endpoint }`; // localhost:4000/api/\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    }else {\n        return fetch( url, {\n            method,\n            headers:{\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        })\n    }\n\n\n}\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseURL }/${ endpoint }`; // localhost:4000/api/\n    const token = localStorage.getItem( 'token' ) || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, { \n            method,\n            headers:{\n                'x-token': token\n            }\n         } );\n    }else {\n        return fetch( url, {\n            method,\n            headers:{\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        })\n    }\n\n\n}\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","export const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n\n    eventStartAddNew:'[event] Set Active',\n    eventLogout:'[event] Logout event',\n\n\n    eventSetActive: '[event] Set Active',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdate: '[event] event updated',\n    eventDeleted: '[event] event deleted',\n    eventLoaded: '[event] Events loaded',\n\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout'\n\n}","import moment from 'moment';\n\nexport const prepareEvents = ( events = [] ) => { \n\n    return events.map( \n        (e)=>({\n            ...e,\n            end: moment( e.end ).toDate(),\n            start: moment( e.start ).toDate(),\n        })\n    );\n\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = ( event ) => { \n    return async( dispatch, getState ) => {\n\n        const { uid, name} = getState().auth;\n        try {\n            \n            const resp = await fetchConToken( 'events', event, 'POST' );\n            const body = await resp.json();\n            \n            if ( body.ok ) {\n\n                event.id = body.evento.id;\n\n                event.user = {\n                    _id: uid,\n                    name: name  \n                }\n                console.log( event );\n                dispatch( eventAddNew( event ) );\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n        \n        \n\n    }\n}\n\nconst eventAddNew = ( event ) => ({ \n    type:types.eventAddNew,\n    payload:event\n});\n\n\nexport const eventSetActive = ( event ) => ({ \n    type:types.eventSetActive,\n    payload:event\n});\n\nexport const eventStartUpdate = ( event ) => {\n\n    return async( dispatch ) => {\n        try {\n\n            \n            const resp = await fetchConToken( `events/${ event.id }`,event,'PUT' );\n            const body = await resp.json();\n\n            if (body.ok) {\n                dispatch( eventUpdated( event ) );\n            }else {\n                Swal.fire('Error', body.msg,'error');\n            }\n\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n}\n\nconst eventUpdated = ( event ) =>({ \n\n    type: types.eventUpdate,\n    payload: event\n\n });\n\n\n export const eventStartDelete = () => {\n     return async ( dispatch, getState ) => {\n        \n        const { id } = getState().calendar.activeEvent;\n\n        try {\n\n            const resp = await fetchConToken( `events/${ id }`,{},'DELETE' );\n            const body = await resp.json();\n\n            if (body.ok) {\n                dispatch( eventDeleted() );\n            }else {\n                Swal.fire('Error', body.msg,'error');\n            }\n\n            \n        } catch (error) {\n            console.log(error);\n        }\n     }\n }\n\nconst eventDeleted = ( ) => ({ type:types.eventDeleted });\n\nexport const eventStartLoading = () => {\n     return async ( dispatch ) => { \n        try {\n            \n            const resp = await fetchConToken('events');\n            const body = await resp.json();\n\n            const events =  prepareEvents( body.msg );\n            \n            dispatch( eventLoaded(events) );\n\n        } catch (error) {\n            console.log(error);\n        }\n     }\n}\n\nconst eventLoaded = ( events ) => ({\n     type: types.eventLoaded,\n     payload: events\n});\n\n\nexport const eventLogout = () => ({ type: types.eventLogout });\n\n\n\nexport const eventClearActiveEvent  = () => ({ type: types.eventClearActiveEvent });","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { eventLogout } from \"./events\";\n\n\n\nexport const startLogin = ( email, password ) => { \n    return async ( dispatch ) => {\n\n       const resp = await fetchSinToken( 'auth',{ email, password }, 'POST' );\n       const body = await resp.json();\n\n       if ( body.ok ) {\n           localStorage.setItem('token', body.token);\n           localStorage.setItem('token-init-date', new Date().getTime() );\n            \n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }));\n       }else{\n           Swal.fire('Error', body.msg, 'error');\n       }\n\n    }\n}\n\nexport const startRegister = ( email, password, name ) => {\n    return async ( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth/new',{ email, password, name }, 'POST' );\n        const body = await resp.json();\n \n        if ( body.ok ) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime() );\n             \n             dispatch( login({\n                 uid: body.uid,\n                 name: body.name\n             }));\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n    }\n} \n\nexport const startChecking = () => {\n\n    return async( dispatch ) => {\n\n        const resp = await fetchConToken( 'auth/renew' );\n        const body = await resp.json();\n        \n \n        if ( body.ok ) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime() );\n             \n             dispatch( login({\n                 uid: body.uid,\n                 name: body.name\n             }));\n        }else{\n            dispatch( checkingFinish() );\n        }\n\n    }\n\n}\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\n\nconst login = ( user ) => ({ \n    type: types.authLogin,\n    payload: user\n});\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n        localStorage.clear();\n        dispatch( eventLogout() );\n        dispatch( logout() );\n    }\n}\n\nconst logout = () => ({ type: types.authLogout });\n","import { useState } from \"react\"\n\nexport const useForm = ( initialState = {}  ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n    const handleInputChange = ( { target } ) =>{\n\n        // console.log(target.name);\n        // console.log(target.value);\n\n        setValues({\n            ...values,\n           [target.name] : target.value\n        });\n\n    }\n\n    return [ values, handleInputChange,reset ];\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hook/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n    \n    const dispatch = useDispatch();\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail:'',\n        lPassword:''\n    });\n\n    \n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName:'Hello',\n        rEmail:'Hi@gmail.com',\n        rPassword1:'1234657',\n        rPassword2:'1234657'\n    });\n    \n    const  { lEmail, lPassword } = formLoginValues;\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const handleLogin = ( e ) => {\n        \n        e.preventDefault();\n\n        dispatch( startLogin( lEmail, lPassword ) );\n    }\n\n    const handleRegister = ( e ) => { \n\n        e.preventDefault();\n        \n        if( rPassword1 !== rPassword2 ){\n            return Swal.fire( 'Error','Las contraseñas deben de ser iguales', 'error' );\n        }\n        dispatch( startRegister( rEmail, rPassword1, rName  ) );\n    }\n\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit= { handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={ handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={ rName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={ rEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword1\"\n                                value={ rPassword1 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value={ rPassword2 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector(state => state.auth);\n    \n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\" >\n            <span className=\"navbar-brand\" > \n                { name }\n            </span>\n\n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }\n            >\n                <i className=\"fas fa-sign-out-alt\" ></i>\n                <span> Salir</span>\n            </button>\n        </div>\n    )\n}\n","\n\nexport const messages = {\n\n    allDay: 'Todo el dia',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Dia',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No ahy eventos en este rango',\n    showMore: total => `+ Ver mas (${ total })`\n    \n};","import React from 'react';\n\nexport const CalendarEvent = ({ event }) => {\n    \n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span> { user.name } </span>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\n\nexport const uiOpenModal = () => ({ type:types.uiOpenModal });\nexport const uiCloseModal = () => ({ type:types.uiCloseModal });","import moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport Modal from 'react-modal'; \nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nif ( process.env.NODE_ENV !== 'test' ) {\n  Modal.setAppElement('#root');\n}\n\nconst now = moment().minutes(0).seconds(0).add( 1, 'hours');\nconst last = now.clone().add(1, 'hours' );\n\nconst initEvent = {\n  title:'',\n  notes:'',\n  start: now.toDate(),\n  end: last.toDate()  \n}\n\n\nexport const CalendarModal = () => {\n\n\n  const { modalOpen } = useSelector(state => state.ui);\n  const { activeEvent } = useSelector(state => state.calendar);\n\n\n  const dispatch = useDispatch();\n\n  const [ dateStart, setDateStart] = useState( now.toDate() );\n  const [ dateEnd, setDateEnd] = useState( last.toDate() );\n  const [titleValid, setTitleValid] = useState(true);\n\n  const [formValues, setFormValues] = useState( initEvent );\n\n  const { notes, title, start, end } = formValues;\n\n\n  useEffect(() => {\n   \n      if ( activeEvent ) {\n        setFormValues( activeEvent );\n      }\n      else{\n        setFormValues( initEvent );\n      }\n   \n  }, [activeEvent, setFormValues]);\n\n  const handleInputChange = ({ target }) => {\n\n    setFormValues({\n      ...formValues,\n      [target.name]:target.value\n    });\n\n  }\n\n  const closeModal = () => {\n    \n    dispatch( uiCloseModal() );\n    dispatch( eventClearActiveEvent() );\n    setFormValues( initEvent );\n  }\n\n  const handleStartDateChange = ( e ) =>{\n\n    setDateStart( e );\n    setFormValues({\n      ...formValues,\n      start:e\n    });\n\n  }\n  \n  const handleEndDateChange = ( e ) => {\n    setDateEnd(e);\n    setFormValues({\n      ...formValues,\n      end:e\n    });\n  }\n\n  const handleSubmitForm = ( e ) => {\n\n    e.preventDefault();\n\n    const momentStart = moment( start );\n    const momentEnd = moment( end );\n\n    if ( momentStart.isSameOrAfter( momentEnd ) ) {\n      return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha inicio', 'error');\n    }\n    if ( title.trim().length < 2 ) {\n      return setTitleValid(false);\n    }\n\n\n    if( activeEvent ){\n\n      dispatch( eventStartUpdate( formValues ) )\n\n    }else{\n      \n      dispatch( eventStartAddNew( formValues ));\n      \n    }\n\n\n    setTitleValid(true);\n\n    closeModal();\n\n  }\n\n  return (\n      <Modal\n        isOpen={ modalOpen }\n      //   onAfterOpen={afterOpenModal}\n        onRequestClose={ closeModal }\n        style={customStyles}\n        className=\"modal\"\n        closeTimeoutMS={ 200 }\n        overlayClassName=\"modal-fondo\"\n        ariaHideApp={ !process.env.NODE_ENV ==='test' }\n      >\n          <h1> { (activeEvent)? 'Editar evento' : 'Nuevo evento' } </h1>\n      <hr />\n        <form \n              className=\"container\"\n              onSubmit={ handleSubmitForm }\n        >\n\n            <div className=\"form-group\">\n                <label>Fecha y hora inicio</label>\n                <DateTimePicker\n                  onChange={ handleStartDateChange }\n                  value={ dateStart}\n                  className=\"form-control\"\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label>Fecha y hora fin</label>\n                <DateTimePicker\n                  onChange={ handleEndDateChange }\n                  value={ dateEnd}\n                  minDate={ dateStart }\n                  className=\"form-control\"\n                />\n            </div>\n\n            <hr />\n            <div className=\"form-group\">\n                <label>Titulo y notas</label>\n                <input \n                    type=\"text\" \n                    className={` form-control ${ !titleValid && 'is-invalid' } `}\n                    placeholder=\"Título del evento\"\n                    name=\"title\"\n                    autoComplete=\"off\"\n                    value={ title }\n                    onChange={ handleInputChange }\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n            </div>\n\n            <div className=\"form-group\">\n                <textarea \n                    type=\"text\" \n                    className=\"form-control\"\n                    placeholder=\"Notas\"\n                    rows=\"5\"\n                    name=\"notes\"\n                    value={ notes }\n                    onChange={ handleInputChange }\n                ></textarea>\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n            </div>\n\n            <button\n                type=\"submit\"\n                className=\"btn btn-outline-primary btn-block\"\n            >\n                <i className=\"far fa-save\"></i>\n                <span> Guardar</span>\n            </button>\n\n        </form>\n      </Modal>\n  )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );     \n    }\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\" ></i>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch(); \n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n    return (\n        <button\n\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n\n        >\n        <i className=\"fas fa-trash\" ></i>   \n        <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\n//change spanish\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);// or globalizeLocalizer\n\n\nexport const CalendarScreen = () => {\n\n  const dispatch = useDispatch();\n  const { events, activeEvent } = useSelector(state => state.calendar )\n\n  const { uid } = useSelector(state => state.auth);\n\n\n  const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n  useEffect(() => {\n    \n    dispatch( eventStartLoading() );\n\n\n  }, [dispatch])\n\n  const onDoubleClick = (e) => {\n\n    dispatch( uiOpenModal() );\n\n  }\n  const onSelectEvent= (e) => {\n    dispatch( eventSetActive( e ) );\n  }\n\n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  }\n  \n  const eventStyleGetter = ( event, start, end, isSelected ) => {\n    const style = {\n      backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\n      borderRadius:'0px',\n      opacity: 0.8,\n      display: 'block',\n      color:'white'\n    }\n\n    return{\n       style\n    }\n\n  };\n  \n  const onSelectSlot = ( e ) => {\n    // console.log(e);\n\n    dispatch( eventClearActiveEvent() );\n  }\n\n  return (\n        <div className=\"calendar-screen\" >\n          <Navbar/>\n\n          <Calendar\n            localizer={ localizer }\n            events={ events }\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            messages={ messages }\n            eventPropGetter={ eventStyleGetter } \n            onDoubleClickEvent={ onDoubleClick }\n            onSelectEvent={ onSelectEvent }\n            onView={ onViewChange }\n            onSelectSlot={ onSelectSlot }\n            selectable={ true }\n            view={ lastView }\n            components={{\n              event:CalendarEvent\n            }}\n          />\n          <AddNewFab/>\n          {\n            ( activeEvent ) && <DeleteEventFab/>\n          }\n          <CalendarModal/>\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props)=>(\n                (isAuthenticated)\n                    ? ( <Component { ...props } /> )\n                    : (<Redirect to=\"/login\" />)\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated:PropTypes.bool.isRequired,\n    component:PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    return (\n        <Route { ...rest }\n        component={ (props)=>(\n            (isAuthenticated)\n            ? ( <Redirect to=\"/\"/> )\n            : ( <Component { ...props } /> )\n        )}\n    />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated:PropTypes.bool.isRequired,\n    component:PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRouter';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector(state => state.auth)\n\n    useEffect(() => {\n       \n        dispatch( startChecking() );\n       \n    }, [dispatch]);\n\n    if ( checking ) {\n        return ( <h5>Espere ...</h5> );\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                        <PublicRoute \n                            exact \n                            path=\"/login\" \n                            component={ LoginScreen } \n                            isAuthenticated={ !!uid }\n                        />\n\n                        <PrivateRoute \n                            exact \n                            path=\"/\"      \n                            component={ CalendarScreen }\n                            isAuthenticated={ !!uid }\n                        />\n                        <Redirect to=\"/login\" /> \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.authLogin:\n            return { \n                ...state,\n                ...action.payload,\n                checking: false\n            }\n        case types.authCheckingFinish:\n            return { \n                ...state,\n                checking: false\n            }\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\n\n// {\n//     id: 322332232,\n//     title: 'Mi Cumpleaños',\n//     start: moment().toDate(), //new Date()\n//     end: moment().add( 2, 'hours' ).toDate()\n//     notes:'send Gmail',\n//     user:{\n//       _id: '123',\n//       name: 'Mauricio'\n//     }\n\n// }\n\nconst initialState = {\n\n    events:[],\n    activeEvent:null\n\n};\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.eventSetActive:\n             return{\n                ...state,\n                activeEvent: action.payload\n            }\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n        case types.eventClearActiveEvent:\n            return{\n                ...state,\n                activeEvent:null\n            }\n\n        case types.eventUpdate:\n            return {\n                ...state,\n                events: state.events.map(\n                    e =>( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e =>( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload]\n            }\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen:false\n}\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n        case types.uiCloseModal:\n            return{\n                ...state,\n                modalOpen:false\n            }\n        default:\n            return state;\n    }\n\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar:calendarReducer,\n    auth:authReducer\n    //TODO: CalendarReducer \n});","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    ) \n) ","import React from 'react'\nimport { Provider } from 'react-redux';\n\nimport { AppRouter } from './router/AppRouter';\nimport { store } from './store/store';\n    \nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store } >\n            <AppRouter/>\n        </Provider  >\n    )\n}\n    ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles/styles.css'; \n\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}